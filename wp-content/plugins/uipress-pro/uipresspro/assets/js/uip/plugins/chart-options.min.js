export function moduleData(){return{props:{returnData:Function,value:Array,placeHolder:String,args:Object,size:String},data(){return{updating:!1,option:this.returnDefaultOptions,strings:{styles:__("Styles","uipress-pro"),lineRoundness:__("Line tension","uipress-pro"),showYaxis:__("Y axis","uipress-pro"),showXaxis:__("X axis","uipress-pro"),showYaxisGrid:__("Y axis grid","uipress-pro"),showXaxisGrid:__("X axis grid","uipress-pro"),borderWidth:__("Line width","uipress-pro"),dataBackground:__("Data fill","uipress-lite"),compBackground:__("Comparison data fill","uipress-lite")}}},watch:{value:{handler(t,i){this.updating||this.injectProp()},deep:!0,immediate:!0},option:{handler(t,i){this.updating||this.returnData(this.option)},deep:!0}},computed:{returnDefaultOptions:()=>({tension:.15,borderWidth:3,showYaxis:!1,showXaxis:!1,showYaxisGrid:!0,showXaxisGrid:!1,dataBackground:"",compBackground:""}),returnSelectOptions:()=>({false:{value:!1,label:__("Hide","uipress-pro")},true:{value:!0,label:__("Show","uipress-pro")}})},methods:{async injectProp(){this.updating=!0;const t=this.returnDefaultOptions,i=this.isObject(this.value)?this.value:{};this.option={...t,...i},await this.$nextTick(),this.updating=!1}},template:'\n\t\n\t<dropdown pos="left center" class="uip-w-100p" :snapX="[\'#uip-block-settings\']">\n  \n      <template v-slot:trigger>\n        \n          <button class="uip-button-default uip-border-rounder uip-icon uip-padding-xxs uip-link-muted uip-w-100p">palette</button>\n        \n      </template>\n      \n      <template v-slot:content>\n        \n          <div class="uip-grid-col-1-3 uip-padding-s uip-w-300">\n          \n              <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.lineRoundness}}</span></div>\n              <div class="uip-flex uip-flex-center">\n                <uip-number :value="option.tension" :returnData="function(d){option.tension = d}" :customStep="0.01"/>\n              </div>\n              \n              <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.borderWidth}}</span></div>\n              <div class="uip-flex uip-flex-center">\n                <uip-number :value="option.borderWidth" :returnData="function(d){option.borderWidth = d}" :customStep="1"/>\n              </div>\n              \n              \n              <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.dataBackground}}</span></div>\n              <color-select :value="option.dataBackground" :returnData="(data)=>{option.dataBackground = data}"/>\n              \n              <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.compBackground}}</span></div>\n              <color-select :value="option.compBackground" :returnData="(data)=>{option.compBackground = data}"/>\n                \n              \n              \n              <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.showYaxis}}</span></div>\n              <div class="uip-flex uip-flex-center">\n                <switch-select :args="{asText: true, options: returnSelectOptions}" :value="option.showYaxis" :returnData="function(d){option.showYaxis = d}"/>\n              </div>\n              \n              <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.showXaxis}}</span></div>\n              <div class="uip-flex uip-flex-center">\n                <switch-select :args="{asText: true, options: returnSelectOptions}" :value="option.showXaxis" :returnData="function(d){option.showXaxis = d}"/>\n              </div>\n              \n              <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.showYaxisGrid}}</span></div>\n              <div class="uip-flex uip-flex-center">\n                <switch-select :args="{asText: true, options: returnSelectOptions}" :value="option.showYaxisGrid" :returnData="function(d){option.showYaxisGrid = d}"/>\n              </div>\n              \n              <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.showXaxisGrid}}</span></div>\n              <div class="uip-flex uip-flex-center">\n                <switch-select :args="{asText: true, options: returnSelectOptions}" :value="option.showXaxisGrid" :returnData="function(d){option.showXaxisGrid = d}"/>\n              </div>\n              \n          </div>    \n          \n        \n      </template>\n    </dropdown>\n    '}};