const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export default{props:{value:[Object,String],returnData:Function},data(){return{updating:!1,option:this.defaultValue,menus:[],strings:{selectMenu:__("Select menu","uipress-lite")},enabledDisabled:{false:{value:!1,label:__("Disabled","uipress-lite")},true:{value:!0,label:__("Enabled","uipress-lite")}}}},watch:{value:{handler(){this.updating||this.injectProp()},deep:!0,immediate:!0},option:{handler(){this.updating||this.returnData(this.option)},deep:!0},"option.enabled":{handler(){this.option.enabled&&this.fetchMenus()},immediate:!0}},computed:{defaultValue:()=>({enabled:!1,menuid:""})},methods:{async injectProp(){this.updating=!0,this.option=this.isObject(this.value)?{...this.value}:{...this.defaultValue},await this.$nextTick(),this.updating=!1},async fetchMenus(){if(this.menus.length)return;let e=new FormData;e.append("action","uip_get_custom_menu_list"),e.append("security",uip_ajax.security);const t=await this.sendServerRequest(uip_ajax.ajax_url,e);t.error?this.uipApp.notifications.notify(t.message,"","error",!0,!1):this.menus=t.menus}},template:'\n  \n  <div class="uip-flex uip-flex-column uip-row-gap-xs uip-w-100p">\n  \t\n\t  <toggle-switch :options="enabledDisabled" :activeValue="option.enabled" :returnValue="(data)=>option.enabled = data"/>\n\t  \n\t  \n\t  <select v-if="option.enabled" class="uip-input" v-model="option.menuid">\n\t  \n\t  \t<option disabled selected value="">{{strings.selectMenu}}</option>\n\t\t  \n\t  \t<template v-for="menu in menus">\n\t\t  \n\t\t  <option :value="menu.id">{{menu.label}}</option>\n\t\t  \n\t\t</template>\n\t\t\n\t  </select>\n  \n  \n  </div>\n  \n  \n  \n  '};