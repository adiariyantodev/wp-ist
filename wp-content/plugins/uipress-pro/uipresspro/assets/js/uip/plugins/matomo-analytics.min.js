const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export default{data:()=>({ready:!1,hasAccount:!1,hasLicence:!1,queryURL:!1,reportRunning:!1,token:!1,saveAccountToUser:!1,cache:{},queue:[],dev:!1,matomoPath:""}),inject:["uiTemplate"],watch:{ready:{handler(t,e){this.uipApp.matomoAnalytics.ready=this.returnStatus},deep:!0},"uiTemplate.globalSettings.options.analytics.saveAccountToUser":{handler(t,e){this.startSetup()}}},async mounted(){await this.$nextTick(),this.createQueue(),this.pushToGlobal()},computed:{returnStatus(){return this.ready},returnAccountOnUser(){return void 0!==this.uiTemplate.globalSettings.options&&this.hasNestedPath(this.uiTemplate,"globalSettings","options","analytics","saveAccountToUser")}},methods:{createQueue(){this.queue=((t,e)=>{const a=[],s=()=>{a[0]&&a[0]().then(function(t){return t}).catch(e).then(()=>a.shift()).then(s).then()};return async t=>{if(a.push(t),1===a.length)return new Promise((t,e)=>{s()})}})()},async pushToGlobal(){this.uipApp.matomoAnalytics={api:this.uipMatomoAnalytics,ready:this.returnStatus},await this.$nextTick(),this.ready=!0},async uipMatomoAnalytics(t,e,a){if(this.queryURL||await this.getQueryURL(),"refresh"==t)return await new Promise((t,e)=>{this.getQueryURL(t)});if(!this.hasAccount){let t={error:!0};return t.message=__("No matomo account connected","uipress-pro"),t.type="no_account",t}if(!this.hasLicence){let t={error:!0};return t.message=__("No pro licence found. Please add a valid pro licence to use google analytics","uipress-pro"),t.type="no_licence",t}if("get"==t){const t=this.getDates(e,a),s=(t,e)=>new Promise((a,s)=>this.runReport(t,a,e));return await new Promise((e,a)=>{this.queue(()=>s(t,e))})}return"removeAccount"==t?await new Promise((t,e)=>{this.removeAnalyticsAccount(t)}):void 0},startSetup(){this.getQueryURL()},async getQueryURL(t){this.cache={},this.saveAccountToUser=this.returnAccountOnUser,this.hasAccount=!1,this.hasLicence=!1,this.ready=!1,this.queryURL=!1;let e=new FormData;e.append("action","uip_build_matomo_analytics_query"),e.append("security",uip_ajax.security),e.append("saveAccountToUser",this.saveAccountToUser);const a=await this.sendServerRequest(uip_ajax.ajax_url,e);return this.ready=!0,a.error?("no_matomo"==a.error_type&&(this.hasAccount=!1,this.queryURL="no_matomo"),"no_licence"==a.error_type&&(this.hasLicence=!1,this.queryURL="no_licence"),void 0!==t&&(t(!1),this.queryURL="undefined"),!1):(this.hasAccount=!0,this.hasLicence=!0,this.queryURL=a.url,this.matomoPath=a.matomoPath,void 0!==t&&t(!0),!0)},async runReport(t,e,a){let s=`&sd=${t.startDate}&ed=${t.endDate}&sdc=${t.startDateCom}&edc=${t.endDateCom}`,r=this.queryURL+s;if(this.cache[t.startDate+t.endDate])return e(!0),void a(this.cache[t.startDate+t.endDate]);this.reportRunning=!0;let n=new FormData;const i=await this.sendServerRequest(r,n);if(this.reportRunning=!1,i.error){const t=i.message,s=__("Unable to fetch analytic data","uipress-pro");this.uipApp.notifications.notify(s,t,"error",!0,!1),e(!0),a(i)}i.access_token&&this.saveToken(i.access_token),this.cache[t.startDate+t.endDate]=i,i.matomoPath=this.matomoPath,e(!0),a(i)},async saveToken(t){if(!t||t==this.token)return;let e=new FormData;e.append("action","uip_save_matomo_access_token"),e.append("security",uip_ajax.security),e.append("token",t),e.append("saveAccountToUser",this.saveAccountToUser);const a=await this.sendServerRequest(uip_ajax.ajax_url,e);a.error?this.uipApp.notifications.notify(a.message,"","error",!0,!1):this.token=t},getDates(t,e){let a=this.daysDifference(t,e),s={};return s.startDate=this.returnFormattedDate(t),s.endDate=this.returnFormattedDate(e),t.setDate(t.getDate()-1),s.endDateCom=this.returnFormattedDate(t),t.setDate(t.getDate()-a),s.startDateCom=this.returnFormattedDate(t),s},returnFormattedDate(t){let e=t.getMonth()+1,a=t.getDate(),s=t.getFullYear();return e<10&&(e="0"+e),a<10&&(a="0"+a),s+"-"+e+"-"+a},daysDifference(t,e){let a=e.getTime()-t.getTime();return Math.round(a/864e5)+1},async removeAnalyticsAccount(t){let e=new FormData;e.append("action","uip_remove_matomo_analytics_account"),e.append("security",uip_ajax.security),e.append("saveAccountToUser",this.saveAccountToUser);const a=await this.sendServerRequest(uip_ajax.ajax_url,e);if(a.error)return this.uipApp.notifications.notify(a.message,"","error",!0,!1),void t(!1);this.getQueryURL(),t(!0)}},template:" "};