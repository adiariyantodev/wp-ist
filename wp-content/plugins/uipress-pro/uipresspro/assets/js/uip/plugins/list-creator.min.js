const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export default{props:{returnData:Function,value:Object},data(){return{items:this.returnDefault,loaded:!1,canUpdate:!0,strings:{addNew:__("New item","uipress-lite")}}},watch:{value:{handler(e,n){this.canUpdate&&this.injectValue()},deep:!0,immediate:!0},items:{handler(e,n){this.canUpdate&&this.returnData({options:this.items})},deep:!0}},computed:{returnDefault:()=>[{name:"toast"},{name:"toast"}]},methods:{async injectValue(){this.canUpdate=!1,this.items=Array.isArray(this.value.options)?this.value.options:this.returnDefault,await this.$nextTick(),this.canUpdate=!0},deleteOption(e){this.items.splice(e,1)},newOption(){this.items.push({name:__("List item","uipress-pro"),icon:"favorite"})}},template:'\n    \n    <div class="uip-flex uip-flex-column uip-row-gap-xs uip-w-100p">\n  \n        <uip-draggable v-if="items.length"\n        :list="items" \n        class="uip-flex uip-flex-column uip-row-gap-xs uip-w-100p"\n        :group="{ name: \'list\', pull: false, put: false, revertClone: true }"\n        animation="300"\n        @start="drag = true" \n        @end="drag = false" \n        :sort="true"\n        itemKey="name">\n        \n          <template v-for="(element, index) in items" :key="element.name" :index="index">\n          \n              <div class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center">\n                \n                \n                <div class="uip-background-muted uip-border-rounder uip-padding-xxxs uip-padding-right-xxs uip-flex uip-flex-grow uip-gap-xxs uip-flex-center">\n                \n                  <inline-icon-select :value="{value: element.icon}" :returnData="function(e){element.icon = e.value}">\n                    <template v-slot:trigger>\n                      <div class=" uip-padding-xxxs uip-w-22 uip-text-center uip-text-muted uip-icon uip-text-l uip-flex-center">{{element.icon}}</div>\n                    </template>\n                  </inline-icon-select>\n                  \n                  <input type="text" v-model="element.name" class="uip-input-small uip-blank-input uip-flex-grow">\n                  \n                  <a class="uip-link-muted uip-icon" @click.prevent.stop="deleteOption(index)">close</a>\n                  \n                </div>\n                \n                \n              </div>\n              \n          </template>\n          \n        </uip-draggable>\n          \n        \n        <button @click="newOption()" class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted uip-w-100p">add</button>\n          \n      </div>'};