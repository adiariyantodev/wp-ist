const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n,defineAsyncComponent=window.uipress.defineAsyncComponent,uipVersion=window.uipress.proVersion;export default{components:{ConnectGoogle:defineAsyncComponent(()=>import(`./google-connect-account.min.js?ver=${uipVersion}`))},props:{display:String,name:String,block:Object},data:()=>({loading:!0,rendered:!0,error:!1,apiLoaded:!1,errorMessage:"",total:0,comparisonTotal:0,percentChange:0,fetchingQuery:!1,showGoogleConnection:!1,requestFromGroupDate:!1,currentRequest:!1,groupDate:{},startDate:"",endDate:"",currentData:[],chartData:{labels:{main:[],comparisons:[]}},strings:{lastPeriod:__("last period","uipress-pro"),selectDataMetric:__("Please select a chart metric in this block's options to show chart data.","uipress-pro"),changeAccount:__("Switch account","uipress-pro"),count:__("Count","uipress-pro"),change:__("Change","uipress-pro")}}),inject:["uiTemplate"],watch:{"block.settings.block.options.chartDataType":{handler(t,e){this.getAnalytics()},deep:!0},"uipApp.googleAnalytics":{handler(t,e){t.ready&&this.getAnalytics()},deep:!0,immediate:!0},"uiTemplate.globalSettings.options.analytics.saveAccountToUser":{handler(t,e){this.refreshAnalytics()}}},beforeUnmount(){document.removeEventListener("uipress/app/daterange/change",this.handleDateChange)},mounted(){document.addEventListener("uipress/app/daterange/change",this.handleDateChange)},computed:{returnTableData(){return this.currentData},returnTotal(){return this.total},returnComparisonTotal(){return this.comparisonTotal},returnName(){let t=this.get_block_option(this.block,"block","chartName",!0);return t?t=this.isObject(t)?t.string:t:""},returnChartType(){return this.get_block_option(this.block,"block","chartDataType")},returnChartSettings(){return this.get_block_option(this.block,"block","chartOptions")},returnChartStyle(){let t=this.get_block_option(this.block,"block","chartStyle");return t?t=this.isObject(t)?t.value:"line":"line"},returnLineColor(){let t=this.get_block_option(this.block,"block","chartColour");return t?t=this.isObject(t)?t.value:t:""},returnCompLineColor(){let t=this.get_block_option(this.block,"block","chartCompColour");return t?t=this.isObject(t)?t.value:t:""},hideChart(){let t=this.get_block_option(this.block,"block","hideChart");return t?t=this.isObject(t)?t.value:t:""},inlineAccountSwitch(){let t=this.get_block_option(this.block,"block","inlineAccountSwitch");return!t||(t=this.isObject(t)?t.value:t)},returnRange(){let t=this.get_block_option(this.block,"block","dateRange");return t?t=(t=isNaN(t)?14:t)>60?60:t:14},hasGlobalDate(){return!!this.groupDate.start},isApiReady(){return this.hasNestedPath(this.uipApp,"googleAnalytics","ready")},returnStartDate(){return this.hasGlobalDate?this.groupDate.start:this.startDate},returnEndDate(){return this.hasGlobalDate?this.groupDate.end:this.endDate}},methods:{handleDateChange(t){t.detail.IDS&&Array.isArray(t.detail.IDS)&&t.detail.IDS.includes(this.block.uid)&&(this.groupDate.start=t.detail.groupDate.start,this.groupDate.end=t.detail.groupDate.end,this.getAnalytics())},async getAnalytics(){if(this.resetErrorState(),this.apiLoaded=this.isApiReady,!this.apiLoaded)return;this.loading=!0;const{startDate:t,endDate:e}=this.calculateDateRange(),i=await this.fetchAnalyticsData(t,e);i.error?this.handleApiError(i):(this.currentRequest=i,this.processResponse(i)),this.loading=!1},resetErrorState(){this.error=!1,this.errorMessage="",this.showGoogleConnection=!1},calculateDateRange(){let t,e;return this.hasGlobalDate?(t=new Date(Date.parse(this.groupDate.start)),e=new Date(Date.parse(this.groupDate.end))):((e=new Date).setDate(e.getDate()-1),(t=new Date).setDate(t.getDate()-this.returnRange)),this.startDate=t,this.endDate=e,{startDate:t,endDate:e}},async fetchAnalyticsData(t,e){return await this.uipApp.googleAnalytics.api("get",t,e)},handleApiError(t){this.error=!0,this.errorMessage=t.message,"no_account"===t.type&&(this.showGoogleConnection=!0)},processResponse(){const t=this.currentRequest,e=this.returnChartType;e&&(this.currentData=t[e].report.data,console.log(this.currentData))},async removeAnalyticsAccount(){this.uipApp.googleAnalytics.ready=!1,await this.uipApp.googleAnalytics.api("removeAccount"),await this.uipApp.googleAnalytics.api("refresh"),this.uipApp.googleAnalytics.ready=!0,this.getAnalytics()},secondsToTime(t){if(isNaN(t)||t<0)return"0m 0s";return`${Math.floor(t/60).toString().padStart(2,"0")}m ${(t%60).toString().padStart(2,"0")}s`},async refreshAnalytics(){this.uipApp.googleAnalytics.ready=!1,await this.uipApp.googleAnalytics.api("refresh")&&(this.uipApp.googleAnalytics.ready=!0,this.getAnalytics())},returnFormattedDate(t){if(!t)return"";return`${t.getFullYear()}/${(t.getMonth()+1).toString().padStart(2,"0")}/${t.getDate().toString().padStart(2,"0")}`},returnErrrorMessage(){try{JSON.parse(this.errorMessage)}catch(t){return this.errorMessage}if(this.isObject(JSON.parse(this.errorMessage))){let t=JSON.parse(this.errorMessage);return`\n              <h5 style="margin:0">${t.status}</h5>\n              <p style="margin-bottom:0;">${t.message}</p>\n            `}return this.errorMessage}},template:'\n  \n\t<div class="uip-flex uip-flex-column uip-text-normal">\n  \n      \x3c!-- Header --\x3e\n      <div class="uip-flex uip-flex-between">\n      \n        \x3c!--Chart title--\x3e\n        <div class="uip-margin-bottom-xxs uip-text-normal uip-chart-title">{{returnName}}</div>\n        \n        \x3c!-- Account switcher--\x3e\n        <dropdown pos="bottom right" v-if="!inlineAccountSwitch && !showGoogleConnection">\n          <template v-slot:trigger>\n            <div class="uip-icon uip-link-muted uip-text-l">more_horiz</div>\n          </template>\n          <template v-slot:content>\n            <div class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center uip-padding-xxxs uip-link-muted" @click="removeAnalyticsAccount()">\n              <div class="uip-icon">sync</div>              <div class="uip-padding-xxs">{{strings.changeAccount}}</div>\n            </div>\n          </template>\n        </dropdown>  \n        \n      </div>\n    \n      <div class="uip-text-s uip-text-muted uip-margin-bottom-s uip-margin-bottom-s uip-dates">{{returnFormattedDate(returnStartDate)}} - {{returnFormattedDate(returnEndDate)}}</div>\n      <div class="uip-margin-bottom-xxs" v-if="showGoogleConnection"><ConnectGoogle :success="refreshAnalytics"/></div>\n      <div v-if="loading" class="uip-padding-m uip-flex uip-flex-center uip-flex-middle uip-min-w-200 uip-w-100p uip-ratio-16-10 uip-border-box"><loading-chart/></div>\n      <div v-else-if="error && errorMessage" class="uip-padding-xs uip-border-round uip-background-orange-wash uip-text-bold uip-margin-bottom-s uip-scale-in-top uip-max-w-100p" v-html="returnErrrorMessage()"></div>\n      <div v-else-if="!returnChartType" class="uip-padding-xxs uip-border-round uip-background-green-wash uip-text-green uip-text-bold uip-margin-bottom-s uip-scale-in-top uip-max-w-200">{{strings.selectDataMetric}}</div>\n      \n      <div v-else class="uip-min-w-200">\n        <div class="uip-flex uip-flex-column uip-row-gap-xs">\n          <div class="uip-max-w-100p uip-overflow-auto uip-scrollbar">\n            <table class="uip-min-w-250 uip-w-100p uip-table">\n              <thead>\n                <tr class="">\n                  <th class="uip-padding-bottom-xxs"></th>\n                  <th class="uip-text-muted uip-text-weight-normal uip-text-right uip-padding-bottom-xxs">{{strings.count}}</th>\n                  <th class="uip-text-right uip-text-muted uip-text-weight-normal uip-padding-bottom-xxs">{{strings.change}}</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for="item in returnTableData">\n                  <td class="uip-text-bold uip-padding-bottom-xxs">{{item.name}}</td>\n                  <td class="uip-text-right uip-padding-bottom-xxs">{{item.value}}</td>\n                  <td class="uip-text-right uip-padding-bottom-xxs">\n                    <div class="uip-text-s uip-background-orange-wash uip-border-round uip-padding-xxxs uip-post-type-label uip-flex uip-gap-xxs uip-flex-center uip-text-bold uip-tag-label uip-inline-flex">\n                      <span v-if="item.change > 0" class="uip-icon uip-text-green">arrow_upward</span>\n                      <span v-if="item.change < 0" class="uip-icon uip-text-danger">arrow_downward</span>\n                      <span class="uip-percentage-value">{{item.change}}</span>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      \n      \n\t</div>\n     '};