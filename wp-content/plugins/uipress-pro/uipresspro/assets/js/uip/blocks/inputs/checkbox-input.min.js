const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export default{props:{display:String,name:String,block:Object},data(){return{formData:{},loading:!0,availableOptions:[],arrayString:"",populated:this.returnPopulated,strings:{placeholder:__("Input placeholder...","uipress-lite")}}},mounted(){document.addEventListener("uipress/app/forms/change",this.handleFormChange)},beforeUnmount(){document.removeEventListener("uipress/app/forms/change",this.handleFormChange)},computed:{returnPlaceHolder(){const t=this.get_block_option(this.block,"block","inputPlaceHolder",!0);return t?this.isObject(t)?t.string?t.string:"":t:""},returnLabel(){const t=this.get_block_option(this.block,"block","inputLabel",!0);return t?this.isObject(t)?t.string?t.string:"":t:""},returnRequired(){let t=this.get_block_option(this.block,"block","inputRequired");return this.isObject(t)?t.value:t},returnName(){return this.get_block_option(this.block,"block","inputName")},returnOptions(){let t=this.get_block_option(this.block,"block","selectOptions");return this.availableOptions=t.options,this.availableOptions},returnPopulated(){if(this.returnName in this.formData)return this.formData[this.returnName]}},methods:{handleFormChange(t){t.detail.IDS&&Array.isArray(t.detail.IDS)&&t.detail.IDS.includes(this.block.uid)&&(this.formData=t.detail.formData)},formatChange(t){let e;try{e=JSON.parse(this.arrayString)}catch(t){e=[]}if(Array.isArray(e)||(e=[]),e.includes(t.name)){let i=e.indexOf(t.name);e.splice(i,1)}else e.push(t.name);this.arrayString=JSON.stringify(e)},ifChecked(t){let e;try{e=JSON.parse(this.arrayString)}catch(t){e=[]}return Array.isArray(e)||(e=[]),!!e.includes(t.name)}},template:'\n\t\t<div class="uip-flex uip-flex-column">\n            <span class="uip-input-label uip-text-muted uip-margin-bottom-xxs">{{returnLabel}}</span>\n\t\t    <input v-model="arrayString" type="text" :name="returnName" :value-holder="returnPopulated" :required="returnRequired" style="opacity:0;max-height:0;min-height:0;overflow:hidden;">\n\t\t  \t  <div class="uip-flex uip-flex-column uip-row-gap-xxs">\n\t\t  \t\t  <template v-for="(item,index) in returnOptions">\n\t\t\t  \t\t  <label class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center">\n\t\t\t\t\t    <input class="uip-checkbox" type="checkbox" @change="formatChange(item)" :checked="ifChecked(item)" :key="index">\n\t\t\t\t\t    <div>{{item.label}}</div>\n\t\t\t\t\t  </label>\n\t\t\t\t  </template>\n\t\t\t  </div>\n\t\t</div>'};