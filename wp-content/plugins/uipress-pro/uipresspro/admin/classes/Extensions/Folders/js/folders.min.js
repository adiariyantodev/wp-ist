const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n,pluginVersion=import.meta.url.split("?ver=")[1],AppDataHolder=document.querySelector("#uip-folder-app-data"),uipressLitePath=!!AppDataHolder&&AppDataHolder.getAttribute("uipress-lite"),postType=!!AppDataHolder&&AppDataHolder.getAttribute("postType"),limitToAuthorVal=!!AppDataHolder&&AppDataHolder.getAttribute("limitToAuthor"),limitToType=!!AppDataHolder&&AppDataHolder.getAttribute("limitToType"),userPreferences=AppDataHolder?AppDataHolder.getAttribute("preferences"):"{}",AjaxUrl=!!AppDataHolder&&AppDataHolder.getAttribute("ajax_url"),AjaxSecurity=!!AppDataHolder&&AppDataHolder.getAttribute("security");AppDataHolder&&AppDataHolder.remove();const AppArgs={data:()=>({foldersOpen:!0,rendered:!1,strings:{folders:__("Folders","uipress-lite")}}),watch:{foldersOpen(){this.rendered&&this.saveUserPreference("foldersOpen",this.foldersOpen)}},computed:{returnFolderScreen(){return{component:"FolderApp",label:this.strings.folders}}},methods:{async saveUserPreference(e,r){let t=new FormData;r=0==(r=1==r?"uiptrue":r)?"uipfalse":r,r=this.prepareJSON(r),t.append("action","uip_save_user_preference"),t.append("security",this.AjaxSecurity),t.append("key",e),t.append("value",r),this.sendServerRequest(this.AjaxUrl,t)}},async mounted(){this.isObject(this.userPreferences)&&"foldersOpen"in this.userPreferences&&(this.foldersOpen=this.userPreferences.foldersOpen),await this.$nextTick(),this.rendered=!0},template:'\n  <component v-if="foldersOpen" is="style">\n    .wrap:not(#wp-media-grid){padding-left:266px !important;}\n  </component>\n  <component v-else is="style">\n    .wrap:not(#wp-media-grid){padding-left:60px !important;}\n  </component>\n  \n  <div v-if="!foldersOpen"  class="uip-padding-xs">\n    <div class="uip-icon uip-link-muted uip-padding-xxs uip-border-rounder hover:uip-background-muted" @click="foldersOpen = true">folder</div>\n  </div>\n  \n  \n  <ScreenControl v-if="foldersOpen" :startScreen="returnFolderScreen" :homeScreen="returnFolderScreen.component" class="uip-w-260 uip-padding-s uip-position-sticky uip-top-0 uip-folders-inner"\n  :closer="()=>foldersOpen = false" :showNavigation="true">\n   \n    <template #componenthandler="{ processScreen, currentScreen, goBack }">\n        <KeepAlive>\n          <component @request-screen="(d)=>{processScreen(d)}" @go-back="goBack()"\n          v-bind="currentScreen"\n          :is="currentScreen.component"/>\n        </KeepAlive>\n    </template>\n    \n  </ScreenControl>\n\n  <Notify/>\n  '},setupFolders=async()=>{const{createApp:e,getCurrentInstance:r,defineComponent:t,defineAsyncComponent:o,ref:n,reactive:i}=await import(`${uipressLitePath}assets/js/libs/vue-esm.js`),{VueDraggableNext:p}=await import(`${uipressLitePath}assets/js/libs/VueDraggableNext.js`),{sendServerRequest:s,isObject:a,createUID:l,hasNestedPath:c,uipParseJson:d,prepareJSON:u}=await import(`${uipressLitePath}assets/js/uip/v3.5/utility/functions.min.js`),m=o(()=>import(`./components/content-folder.min.js?ver=${pluginVersion}`)),g=o(()=>import(`./components/new-folder.min.js?ver=${pluginVersion}`)),f=o(()=>import(`./components/folder-app.min.js?ver=${pluginVersion}`)),A=o(()=>import(`./components/loader.min.js?ver=${pluginVersion}`)),h=o(()=>import(`./components/update-folder.min.js?ver=${pluginVersion}`)),v=o(()=>import(`${uipressLitePath}assets/js/uip/components/dropdown.min.js?ver=${pluginVersion}`)),b=o(()=>import(`${uipressLitePath}assets/js/uip/options/color-select.min.js?ver=${pluginVersion}`)),P=o(()=>import(`${uipressLitePath}assets/js/uip/v3.5/utility/notify.min.js?ver=${pluginVersion}`)),j=o(()=>import(`${uipressLitePath}assets/js/uip/v3.5/utility/screen-control.min.js?ver=${pluginVersion}`)),y=o(()=>import(`${uipressLitePath}assets/js/uip/v3.5/utility/contextmenu.min.js?ver=${pluginVersion}`)),S=e(AppArgs);S.component("content-folder",m),S.component("NewFolder",g),S.component("loading-chart",A),S.component("dropdown",v),S.component("color-picker",b),S.component("FolderApp",f),S.component("Notify",P),S.component("ScreenControl",j),S.component("uipDraggable",p),S.component("ContextMenu",y),S.component("UpdateFolder",h),S.config.globalProperties.postType=postType,S.config.globalProperties.limitToAuthor=limitToAuthorVal,S.config.globalProperties.limitToType=limitToType,S.config.globalProperties.AjaxUrl=AjaxUrl,S.config.globalProperties.AjaxSecurity=AjaxSecurity,S.config.globalProperties.sendServerRequest=s,S.config.globalProperties.uipApp=i({}),S.config.globalProperties.isObject=a,S.config.globalProperties.createUID=l,S.config.globalProperties.hasNestedPath=c,S.config.globalProperties.activeFolder=i({id:"all"}),S.config.globalProperties.folderMove=i({handler:()=>{},showRemoveFromFolder:!1}),S.config.globalProperties.userPreferences=d(userPreferences),S.config.globalProperties.prepareJSON=u,document.querySelector("#uip-folder-app")&&S.mount("#uip-folder-app")};setupFolders();