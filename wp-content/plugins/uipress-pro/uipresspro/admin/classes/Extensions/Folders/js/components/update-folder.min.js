const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export default{props:{folder:Object,returnData:Function},data(){return{currentFolder:this.returnDefault,strings:{newFolder:__("New folder","uipress-pro"),name:__("Name","uipress-pro"),colour:__("Colour","uipress-pro"),update:__("Update","uipress-pro")}}},created(){this.injectProp()},watch:{folder:{handler(){this.injectProp()},deep:!0}},computed:{returnDefault:()=>({name:"",color:"rgb(108, 76, 203)"})},methods:{injectProp(){this.currentFolder=this.isObject(this.folder)?{...this.folder}:this.returnDefault},async updateFolder(){let e=new FormData;e.append("action","uip_folders_update_folder_details"),e.append("security",this.AjaxSecurity),e.append("folderId",this.currentFolder.id),e.append("title",this.currentFolder.title),e.append("color",this.currentFolder.color);const t=await this.sendServerRequest(this.AjaxUrl,e);t.error?this.uipApp.notifications.notify(t.message,"","error",!0):(this.uipApp.notifications.notify(__("Folder updated","uipress-pro"),"","success",!0),this.returnData(this.currentFolder))}},template:'\n  \n  <div class="uip-flex uip-flex-column uip-row-gap-xs">\n  \n    <div class="uip-grid-col-1-3 uip-padding-left-s">\n    \n      <div class="uip-text-muted uip-flex uip-flex-center uip-text-s"><span>{{strings.name}}</span></div>\n      <input type="text" v-model="currentFolder.title" class="uip-text-s uip-input-small">\n      \n      <div class="uip-text-muted uip-flex uip-flex-center uip-text-s"><span>{{strings.colour}}</span></div>\n      <color-picker :value="{value: currentFolder.color}"\n      :args="{dropPosition:\'right center\', hasStyleManager:false}"\n      class="uip-text-s"\n      :returnData="(d)=>{currentFolder.color = d.value}"/>\n    \n    </div>\n    \n    <button :disabled="!currentFolder.title" class="uip-button-primary uip-text-s uip-margin-top-s" @click="updateFolder()">{{strings.update}}</button>\n  \n  </div>\n\t\t\n\t\t'};