const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export default{data:()=>({quillEditor:"",showAllRecipients:!1,strings:{newMessage:__("New message","uipress-lite"),recipients:__("Recipients","uipress-lite"),replyTo:__("Reply to","uipress-lite"),subject:__("Subject","uipress-lite"),message:__("Message","uipress-lite"),cancel:__("Cancel","uipress-lite"),sendMessage:__("Send message","uipress-lite"),others:__("Others","uipress-lite")},message:{recipients:[],subject:"",message:"",replyTo:""}}),created(){this.uipApp.messageUser=this},computed:{returnBlankMessage:()=>({recipients:[],subject:"",message:"",replyTo:""})},methods:{show(e){this.message=this.returnBlankMessage;const i=Array.isArray(e)?e:[e];this.message.recipients=i,this.$refs.messagePanel.show()},async sendMessage(){let e=new FormData;e.append("action","uip_send_message"),e.append("security",this.AjaxSecurity),e.append("message",JSON.stringify(this.message));const i=await this.sendServerRequest(this.AjaxUrl,e);i.error?this.uipApp.notifications.notify(i.message,"","error"):(this.uipApp.notifications.notify(i.message,"","success"),this.$refs.messagePanel.close())}},template:'\n  \n    <FloatingPanel ref="messagePanel" :startOpen="false">\n    \n      <div class="uip-flex uip-flex-grow uip-flex-column uip-max-h-100p uip-row-gap-s uip-padding-m uip-h-100p">\n      \n        \x3c!--Header--\x3e\n        <div class="uip-flex uip-flex-center uip-gap-s">\n          \n\n          <div class="uip-text-bold uip-text-l uip-text-emphasis uip-flex-grow">{{strings.newMessage}}</div>\n          \n          \n          <div class="uip-flex uip-text-l uip-self-flex-start">\n            \n            <a @click="$refs.messagePanel.close()" class="uip-link-muted hover:uip-background-muted uip-border-rounder uip-icon uip-padding-xxs">close</a>\n            \n          </div>\n        \n        </div>\n        \n        \n        \x3c!--Spacer--\x3e\n        <div></div>\n        \n        \x3c!--Message Details--\x3e\n        <div class="uip-flex-grow">\n          <div class="uip-grid-col-1-3 uip-padding-left-s">\n          \n            <div class="uip-text-muted uip-flex uip-flex-center uip-gap-xs uip-flex-start uip-padding-top-xxs">\n              <span>{{strings.recipients}}</span>\n            </div>\n            \n            <div v-if="message.recipients.length > 2 && !showAllRecipients" class="uip-flex uip-gap-xs uip-flex-wrap uip-max-h-280 uip-overflow-auto uip-margin-left-xxs uip-flex-center uip-margin-bottom-xs uip-overflow-visible" @click.stop.prevent="showAllRecipients = !showAllRecipients">\n            \n              <template v-for="(item, index) in message.recipients">\n                \n                <div v-if="index < 10" class="uip-background-primary-wash uip-border-round uip-padding-left-xxs uip-padding-right-xxs uip-text-bold uip-flex uip-gap-xxs uip-flex-center">\n                  <span class="uip-text-s uip-max-w-100 uip-overflow-hidden uip-text-ellipsis uip-no-wrap">{{item.user_email}}</span>\n                  <span class="uip-icon uip-link-muted uip-cursor-icon" @click.prevent.stop="message.recipients.splice(index, 1)">close</span>\n                </div>\n                \n                <div v-else-if="index < 11" class="uip-link-muted uip-text-s uip-margin-left-xs">+{{message.recipients.length - 10}} {{strings.others}}</div>\n                \n              </template>\n            </div>\n            \n            <div v-if="showAllRecipients || message.recipients.length < 3" class="uip-flex uip-flex-wrap uip-gap-xxs uip-row-gap-xxs uip-max-h-280 uip-overflow-auto">\n            \n              <template v-for="(item, index) in message.recipients">\n              \n                <div class="uip-background-primary-wash uip-border-round uip-padding-left-xxs uip-padding-right-xxs uip-text-bold uip-flex uip-gap-xxs uip-flex-center">\n                  <span class="uip-text-s uip-max-w-100 uip-overflow-hidden uip-text-ellipsis uip-no-wrap">{{item.user_email}}</span>\n                  <span class="uip-icon uip-link-muted uip-cursor-icon" @click.prevent.stop="message.recipients.splice(index, 1)">close</span>\n                </div>\n                \n              </template>\n              \n            </div>\n            \n            <div class="uip-text-muted uip-flex uip-flex-center uip-gap-xs">\n              <span>{{strings.replyTo}}</span>\n            </div>\n            <input type="email" class="uip-input uip-w-100p" v-model="message.replyTo">\n            \n            <div class="uip-text-muted uip-flex uip-flex-center uip-gap-xs">\n              <span>{{strings.subject}}</span>\n            </div>\n            <input type="email" class="uip-input uip-w-100p" v-model="message.subject">\n            \n            <div class="uip-text-muted uip-flex uip-flex-center uip-gap-xs uip-flex-start uip-padding-top-xxs">\n              <span>{{strings.message}}</span>\n            </div>\n            <RichTextEditor :value="message.message" :returnData="(d)=>message.message=d"/>\n            \n          \n          </div>\n        </div>  \n        \n        <div class="uip-flex uip-flex-between uip-gap-s">\n          <router-link :to="\'/\'" class="uip-button-default uip-no-underline uip-flex-grow uip-text-center">{{strings.cancel}}</router-link>\n          <button class="uip-button-primary uip-flex-grow" @click="sendMessage()">{{strings.sendMessage}}</button>\n        </div>\n        \n        \n      \n      </div>\n    \n    </FloatingPanel>\n    \n   \n      '};