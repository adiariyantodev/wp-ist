const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export default{props:{data:Object,dataChange:Function},data:()=>({loading:!0,strings:{search:__("Search","uipress-lite"),clearSelection:__("Clear selection","uipress-lite"),delete:__("Delete","uipress-lite"),user:__("User","uipress-lite"),IPaddress:__("IP address","uipress-lite"),action:__("Action","uipress-lite"),description:__("Description","uipress-lite"),date:__("Date","uipress-lite"),time:__("Time","uipress-lite"),actions:__("Actions","uipress-lite"),results:__("results","uipress-lite"),next:__("Next","uipress-lite"),previous:__("Previous","uipress-lite"),roleFilter:__("Role filter","uipress-lite"),filters:__("Filters","uipress-lite"),created:__("Created","uipress-lite"),order:__("Order","uipress-lite"),perPage:__("Per page","uipress-lite"),ascending:__("Ascending","uipress-lite"),descending:__("Descending","uipress-lite"),searchActions:__("Search actions","uipress-lite"),actionFilter:__("Action filter","uipress-lite")},tableData:{totalPages:1,activity:[]},selectAll:!1,queryRunning:!1,tableFilters:{search:"",roles:[],status:[],dateCreated:{type:"on",date:""},action:""},tableOptions:{direction:"DESC",sortBy:"username",perPage:20,page:1},dateOptions:{on:{value:"on",label:__("On","uipress-pro")},before:{value:"before",label:__("Before","uipress-pro")},after:{value:"after",label:__("After","uipress-pro")}}}),mounted(){this.getActivityData()},watch:{tableFilters:{handler(t,e){this.getActivityData()},deep:!0},tableOptions:{handler(t,e){this.getActivityData()},deep:!0},selectAll:{handler(t,e){if(t)return this.selectAllActions();this.deSelectAllActions()}}},computed:{returnTotalSelectedActions(){return this.tableData.activity.filter(t=>!0===t.selected)},getTotalSelectedActions(){return this.returnTotalSelectedActions.length},returnSelectedActionIDS(){return this.tableData.activity.map(t=>{if(!0===t.selected)return t.id})}},methods:{async deleteHistoryActions(t){if(!await this.$refs.Confirm.show({title:__("Delete history actions","uipress-pro"),message:__("Deleted history actions can't be recovered","uipress-pro"),okButton:__("Delete","uipress-pro")}))return;const e=Array.isArray(t)?t:[t];let i=new FormData;i.append("action","uip_delete_multiple_actions"),i.append("security",this.AjaxSecurity),i.append("allIDS",JSON.stringify(e));const n=await this.sendServerRequest(this.AjaxUrl,i);n.error?this.uipApp.notifications.notify(n.message,"","error"):(this.uipApp.notifications.notify(n.message,"","success"),this.deSelectAllActions(),this.getActivityData())},async delateAllHistoryItems(){if(!await this.$refs.Confirm.show({title:__("Delete ALL history actions","uipress-pro"),message:__("This action will remove all history actions from your database. Deleted history actions can't be recovered","uipress-pro"),okButton:__("Delete all","uipress-pro")}))return;let t=new FormData;t.append("action","uip_delete_all_history"),t.append("security",this.AjaxSecurity);const e=await this.sendServerRequest(this.AjaxUrl,t);this.loading=!1,e.error?this.uipApp.notifications.notify(e.message,"","error"):(this.uipApp.notifications.notify(e.message,"","success"),this.deSelectAllActions(),this.getActivityData())},selectAllActions(){this.tableData.activity.map(t=>t.selected=!0),this.selectAll=!0},deSelectAllActions(){this.tableData.activity.map(t=>t.selected=!1),this.selectAll=!1},async getActivityData(){if(this.queryRunning)return;this.loading=!0,this.queryRunning=!0;let t=new FormData;t.append("action","uip_get_activity_table_data"),t.append("security",this.AjaxSecurity),t.append("filters",JSON.stringify(this.tableFilters)),t.append("options",JSON.stringify(this.tableOptions));const e=await this.sendServerRequest(this.AjaxUrl,t);this.queryRunning=!1,this.loading=!1,e.error?this.uipApp.notifications.notify(e.message,"","error"):(this.tableData.totalPages=e.tableData.totalPages,this.tableData.activity=e.tableData.activity,this.tableData.totalFound=e.tableData.totalFound,this.tableData.columns=e.tableData.columns,this.tableData.actions=e.tableData.actions,e.tableData.totalPages&&(this.tableOptions.page>e.tableData.totalPages&&(this.tableOptions.page=e.tableData.totalPages),this.tableOptions.page<1&&(this.tableOptions.page=1)))},returnActionClass(t){switch(t){case"primary":return"uip-background-primary-wash";case"warning":return"uip-background-orange-wash";case"danger":return"uip-background-red-wash";default:return"uip-background-primary-wash"}},returnLimitedDescription:t=>t?t.length<260?t:t.substring(0,260)+"...":""},template:'\n  \n  \n  \n  <div class="uip-text-normal uip-flex uip-flex-column uip-row-gap-s">\n  \n    \x3c!--Filters--\x3e\n    \n    <div class="uip-flex uip-gap-xs uip-flex-center uip-flex-between">\n    \n      \x3c!--Search--\x3e\n      <div class="uip-background-muted uip-padding-xs uip-padding-top-xxs uip-padding-bottom-xxs uip-border-rounder uip-flex uip-flex-center uip-gap-xs">\n        <span class="uip-icon uip-text-muted">search</span>\n        <input class="uip-blank-input uip-text-s uip-flex-grow" :placeholder="strings.search" v-model="tableFilters.search">\n      </div>\n      \n      \x3c!--Filters--\x3e\n      <div class="uip-flex uip-gap-xs uip-flex-center">\n        \x3c!--Batch actions--\x3e\n        <dropdown pos="bottom right" ref="bulkActions">\n          \n          <template #trigger>\n          \n            <button :disabled="!getTotalSelectedActions" class="uip-button-default uip-text-s">{{strings.actions}} ({{getTotalSelectedActions}})</button>\n          \n          </template>\n          \n          <template #content>\n          \n            <div class="uip-padding-xs uip-flex uip-flex-column uip-text-weight-normal uip-text-s">\n            \n              <a @click="deSelectAllActions();$refs.bulkActions.close()" \n              class="uip-link-default uip-flex uip-flex-center uip-flex-between uip-gap-m uip-padding-xxs hover:uip-background-muted uip-border-rounder uip-no-underline">\n                <span class="">{{strings.clearSelection}}</span>\n                <span class="uip-icon">backspace</span>\n              </a>\n              \n              \n              <div class="uip-border-top uip-margin-top-xs uip-margin-bottom-xs"></div>\n              \n              <a class="uip-link-danger uip-flex uip-flex-center uip-flex-between uip-gap-m uip-padding-xxs hover:uip-background-muted uip-border-rounder"\n              @click.prevent="deleteHistoryActions(returnSelectedActionIDS);$refs.bulkActions.close()">\n                <span class="">{{strings.delete}}</span>\n                <span class="uip-icon">delete</span>\n              </a>\n            \n            </div>\n          \n          </template>\n        \n        </dropdown>\n        \n        \n        \x3c!--Actions--\x3e\n        <div class="uip-w-160">\n          <MultiSelect :selected="tableFilters.status"\n          :placeHolder="strings.actionFilter"\n          :availableOptions="tableData.actions"\n          :searchPlaceHolder="strings.searchActions"\n          :updateSelected="(d)=>{tableFilters.status=d}"/>\n        </div>\n        \n        \x3c!--User roles--\x3e\n        <div class="uip-w-160">\n          <UserRoleSelect :selected="tableFilters.roles"\n          :placeHolder="strings.roleFilter"\n          :roleOnly="true"\n          :searchPlaceHolder="strings.searchUsersRoles"\n          :updateSelected="(d)=>{tableFilters.roles=d}"/>\n        </div>\n        \n        \x3c!--General filters--\x3e\n        <dropdown pos="left top" ref="filtersDrop">\n        \n          <template #trigger>\n            <a class="uip-link-default hover:uip-background-grey uip-background-muted uip-border-rounder uip-icon uip-padding-xs">tune</a>\n          </template>\n          \n          <template #content>\n          \n            <div class="uip-padding-s uip-flex uip-flex-column uip-row-gap-s uip-w-260">\n            \n              <div class="uip-flex uip-flex-between uip-flex-center">\n                <div class="uip-text-emphasis uip-text-bold uip-text-s">{{strings.filters}}</div>\n                <div @click="$refs.filtersDrop.close()" class="uip-flex uip-flex-center uip-flex-middle uip-padding-xxs uip-link-muted hover:uip-background-muted uip-border-rounder">\n                  <span class="uip-icon">close</span>\n                </div>\n              </div>\n            \n              <div class="uip-grid-col-1-3 uip-padding-left-s">\n            \n                <div class="uip-text-muted uip-flex uip-flex-center uip-text-s"><span>{{strings.created}}</span></div>\n                <switch-select :options="dateOptions" style="width:160px"\n                :activeValue="tableFilters.dateCreated.type" \n                :returnValue="(d)=>(tableFilters.dateCreated.type=d)"/>\n                \n                <div class="uip-text-muted uip-flex uip-flex-center uip-text-s"><span>{{strings.date}}</span></div>\n                <input class="uip-input uip-w-160" type="date" v-model="tableFilters.dateCreated.date">\n              \n              </div>\n              \n              <div class="uip-border-top"></div>\n              \n              <div class="uip-grid-col-1-3 uip-padding-left-s">\n              \n              \n                <div class="uip-text-muted uip-flex uip-flex-center uip-text-s"><span>{{strings.order}}</span></div>\n                <select v-model="tableOptions.direction" class="uip-input uip-w-160">\n                  <option value="ASC">{{strings.ascending}}</option>\n                  <option value="DESC">{{strings.descending}}</option>\n                </select>\n                \n                <div class="uip-text-muted uip-flex uip-flex-center uip-text-s"><span>{{strings.perPage}}</span></div>\n                <input v-model="tableOptions.perPage" class="uip-input uip-w-160" type="number">\n                \n                \n              </div>\n              \n            \n            </div>\n          \n          </template>\n        \n        </dropdown>\n        \n      </div>  \n        \n        \n    \n    </div>\n    \n    <table class="uip-background-transparent uip-template-table" style="border-collapse: collapse;\n    border-spacing: 0;"> \n    \n      <thead>\n      \n        <tr>\n          <th class="uip-padding-top-s uip-padding-bottom-s uip-border-bottom uip-border-top uip-text-left uip-padding-right-s"><input type="checkbox" class="uip-checkbox" v-model="selectAll"></th>\n          <th class="uip-padding-top-s uip-padding-bottom-s uip-border-bottom uip-border-top uip-text-muted uip-text-weight-normal uip-text-left">{{strings.user}}</th>\n          <th class="uip-padding-top-s uip-padding-bottom-s uip-border-bottom uip-border-top uip-text-muted uip-text-weight-normal uip-text-left">{{strings.IPaddress}}</th>\n          <th class="uip-padding-top-s uip-padding-bottom-s uip-border-bottom uip-border-top uip-text-muted uip-text-weight-normal uip-text-left">{{strings.action}}</th>\n          <th class="uip-padding-top-s uip-padding-bottom-s uip-border-bottom uip-border-top uip-text-muted uip-text-weight-normal uip-text-left">{{strings.description}}</th>\n          <th class="uip-padding-top-s uip-padding-bottom-s uip-border-bottom uip-border-top uip-text-muted uip-text-weight-normal uip-text-left">{{strings.date}}</th>\n          <th class="uip-padding-top-s uip-padding-bottom-s uip-border-bottom uip-border-top"></th>\n        </tr>  \n      \n      \n      </thead>\n      \n      \n      \n      <TransitionGroup name="list" tag="tbody">\n      \n        <tr v-for="(activity, index) in tableData.activity" :key="activity.id" @contextmenu.prevent.stop="$refs[\'activityMenu-\'+index][0].show($event)">\n        \n          \x3c!--Selector--\x3e\n          <td class="uip-padding-top-xs uip-padding-bottom-xs uip-border-bottom uip-text-left">\n            <input class="uip-checkbox" :data-id="activity.id" type="checkbox" v-model="activity.selected">\n          </td>\n          \n          \x3c!--User column--\x3e\n          <td class="uip-padding-top-xs uip-padding-bottom-xs uip-border-bottom uip-text-left uip-text-bold uip-text-emphasis uip-link-emphasis">\n            \n              <div class="uip-flex uip-flex-center uip-gap-s" @click="$router.push(\'/users/\' + activity.user_id + \'/\')">\n                <img v-if="activity.image" class="uip-w-28 uip-ratio-1-1 uip-border-circle" :src="activity.image" />\n                <div class="uip-flex uip-flex-column">\n                  <span class="uip-text-bold uip-text-emphasis">{{activity.user}}</span>\n                  <span class="uip-text-muted uip-max-w-160 uip-overflow-hidden uip-text-ellipsis uip-no-wrap uip-text-s">{{activity.user_email}}</span>\n                </div>\n              </div>\n              \n          </td>\n          \n          \x3c!--IP Address--\x3e\n          <td class="uip-padding-top-xs uip-padding-bottom-xs uip-border-bottom">\n            <span class="">{{activity.ip_address}}</span>\n          </td>\n          \n          \x3c!--Action--\x3e\n          <td class="uip-padding-top-xs uip-padding-bottom-xs uip-border-bottom">\n            <div class="uip-flex">\n              <div :class="returnActionClass(activity.type)" class="uip-border-round uip-padding-left-xxs uip-padding-right-xxs uip-text-bold uip-link-default uip-no-underline uip-text-s">\n                {{activity.action}}\n              </div>\n            </div>\n          </td>\n          \n          \x3c!--Description--\x3e\n          <td class="uip-padding-top-xs uip-padding-bottom-xs uip-border-bottom uip-text-s">\n            <dropdown :hover="true" pos="bottom left">\n              <template #trigger>\n                <div class="uip-max-h-80 uip-overflow-auto uip-max-w-350 uip-break-word" v-html="returnLimitedDescription(activity.description)"></div>\n              </template>\n              <template #content v-if="activity.description.length > 260">\n                <div class="uip-padding-s uip-w-300 uip-max-w-350 uip-break-word" v-html="activity.description">\n                </div>\n              </template>\n            </dropdown>\n          </td>\n          \n          \x3c!--Date--\x3e\n          <td class="uip-padding-top-xs uip-padding-bottom-xs uip-border-bottom">\n            <div class="uip-flex uip-flex-column uip-text-s">\n              <span class="">{{activity.time}}</span>\n              <span class="">{{activity.date}}</span>\n            </div>\n          </td>\n          \n          \x3c!--Actions--\x3e\n          <td class="uip-padding-top-xs uip-padding-bottom-xs uip-border-bottom uip-text-right">\n            <div class="uip-inline-flex" @click.prevent.stop="$refs[\'activityMenu-\'+index][0].show($event)">\n              <a class="uip-link-default hover:uip-background-muted uip-border-rounder uip-icon uip-padding-xxs">more_vert</a>\n            </div>\n          </td>\n          \n        </tr>  \n      \n      </TransitionGroup>\n      \n      \n    </table>\n    \n    \x3c!--Pagination--\x3e\n    <div class="uip-padding-bottom-s uip-border-bottom uip-flex uip-flex-between uip-flex-center">\n      \n      <div class="uip-text-muted">\n        {{tableData.totalFound}} {{strings.results}}\n      </div>\n      \n      <div class="uip-flex uip-gap-xs uip-text-s">\n      \n        <button :disabled="tableOptions.page < 2" class="uip-button-default" @click="tableOptions.page--">{{strings.previous}}</button>\n        <button :disabled="tableOptions.page >= tableData.totalPages" class="uip-button-default" @click="tableOptions.page++">{{strings.next}}</button>\n      \n      </div>\n    </div>\n    \n    \n    <template v-for="(activity, index) in tableData.activity">\n      <ContextMenu :ref="\'activityMenu-\'+index">\n      \n        <div class="uip-padding-xs uip-flex uip-flex-column uip-text-weight-normal uip-text-s">\n          \n          <a class="uip-link-danger uip-flex uip-flex-center uip-flex-between uip-gap-m uip-padding-xxs hover:uip-background-muted uip-border-rounder"\n          @click.prevent="deleteHistoryActions(activity.id);$refs[\'activityMenu-\'+index][0].close()">\n            <span class="">{{strings.delete}}</span>\n            <span class="uip-icon">delete</span>\n          </a>\n        \n        </div>\n      \n      </ContextMenu>\n    </template>\n  \n  </div>\n  \n  <Confirm ref="Confirm"/>\n  \n  \n  \n  \n  '};